// Generated by Selenium IDE
import {Builder, By, Key, logging, WebDriver} from 'selenium-webdriver'

import {config} from 'dotenv'
import {join} from 'path'
import {Options} from 'selenium-webdriver/chrome.js'
import {save_cookie} from './handleCookie'

const {Type} = logging

console.log(Type)
config({
	path: join(__dirname, '..', '.env'),
})

const dashboardURL = `https://people.zoho.in/${process.env.ZOHO_LOCATION_URL}/zp#home/dashboard`

const sleep = async (timeout = 3000) => {
	return await new Promise((resolve) => setTimeout(resolve, timeout))
}

const run = async (): Promise<void> => {
	const options = new Options()

	;['--incognito', '--js-flags=--expose-gc'].forEach(function (v) {
		options.addArguments(v)
	})
	options.setLoggingPrefs({performance: 'ALL', browser: 'ALL', client: 'ALL'})

	options.setUserPreferences({
		'profile.default_content_setting_values.geolocation': 2,
	})

	const driver = await new Builder().forBrowser('chrome').setChromeOptions(options).build()
	try {
		await handleLogin(driver)
		await sleep(2_000)
		await driver.close()
	} catch (err) {
		console.error(err)
	}
}

run()
	.then(() => {
		console.log('Success!')
		process.exit(0)
	})
	.catch((err) => {
		console.log(err)
		process.exit(1)
	})

async function handleLogin(driver: WebDriver) {
	await driver.get('https://accounts.zoho.in/signin')

	await driver.findElement(By.id('login_id')).sendKeys(process.env.ZOHO_EMAIL!)

	await driver.findElement(By.id('login_id')).sendKeys(Key.ENTER)
	await sleep(1000)

	await driver.findElement(By.id('password')).sendKeys(process.env.ZOHO_PASSWORD!)

	await driver.findElement(By.id('password')).sendKeys(Key.ENTER)

	// wait until url changes for selenium
	await sleep(8000)

	await driver.get('https://accounts.zoho.in/')

	const accounts = await driver.manage().getCookies()
	console.log('accounts', accounts)

	await driver.get(dashboardURL)
	const people = await driver.manage().getCookies()
	console.log('people', people)

	const cookies = {accounts, people}
	save_cookie(join(__dirname, '..', 'cookies.json'), cookies)
}